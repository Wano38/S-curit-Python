#!/usr/bin/env python3

import socket
import subprocess
import requests

target_ip = "192.168.133.9"

def scan_ports(ip, start=0, end=1024):
    open_ports = []
    print(f"\n[*] Scan des ports {start}-{end} sur {ip}...\n")
    for port in range(start, end + 1):
        s = socket.socket()
        s.settimeout(0.5)
        try:
            s.connect((ip, port))
            print(f"[+] Port ouvert : {port}")
            open_ports.append(port)
        except:
            pass
        finally:
            s.close()
    return open_ports

def nmap_scan(ip, port):
    try:
        result = subprocess.run(
            ["nmap", "-sV", "-p", str(port), ip],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout
    except Exception as e:
        return f"Erreur Nmap: {e}"

def get_http(ip):
    try:
        r = requests.get(f"http://{ip}", timeout=3)
        if r.status_code == 200:
            with open("http_page.html", "w", encoding="utf-8") as f:
                f.write(r.text)
            return "[+] Page HTTP sauvegardée dans http_page.html\n"
        else:
            return f"[-] Erreur HTTP code {r.status_code}\n"
    except Exception as e:
        return f"[-] HTTP erreur: {e}\n"

if __name__ == "__main__":
    output_lines = []

    # Scan ports
    open_ports = scan_ports(target_ip)

    output_lines.append(f"Scan des ports 0-1024 sur {target_ip}\n")
    output_lines.append("Ports ouverts:\n")
    for port in open_ports:
        output_lines.append(f"  - Port {port}\n")

    # Nmap info
    output_lines.append("\nInformations Nmap par port:\n")
    for port in open_ports:
        output_lines.append(f"\n=== Port {port} ===\n")
        nmap_result = nmap_scan(target_ip, port)
        # Pour plus de lisibilité, ne prendre que les lignes importantes
        for line in nmap_result.splitlines():
            if line.strip() and not line.startswith("Starting Nmap") and not line.startswith("Nmap done"):
                output_lines.append(line + "\n")

    # HTTP page si port 80 ouvert
    if 80 in open_ports:
        http_result = get_http(target_ip)
        output_lines.append("\nTéléchargement de la page HTTP:\n")
        output_lines.append(http_result)
    else:
        output_lines.append("\nPort 80 fermé, pas de récupération HTTP.\n")

    # HTTPS check si tu veux
    if 443 in open_ports:
        output_lines.append("\nHTTPS détecté, script non configuré pour télécharger HTTPS.\n")
    else:
        output_lines.append("\nPort 443 fermé.\n")

    # Sauvegarder le tout
    with open("scanner.txt", "w", encoding="utf-8") as f:
        f.writelines(output_lines)

    print("\n[+] Résultats enregistrés dans scanner.txt\n")
